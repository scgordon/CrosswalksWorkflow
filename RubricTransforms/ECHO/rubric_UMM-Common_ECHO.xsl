<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gmx="http://www.isotc211.org/2005/gmx" xmlns:gmi="http://www.isotc211.org/2005/gmi" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:srv="http://www.isotc211.org/2005/srv" xmlns:mri="http://www.isotc211.org/namespace/mri/1.0/2014-07-11" xmlns:gex="http://www.isotc211.org/namespace/gex/1.0/2014-07-11" xmlns:dif="http://gcmd.gsfc.nasa.gov/Aboutus/xml/dif/" xmlns:echo="http://www.echo.nasa.gov/ingest/schemas/operations/" xmlns:eos="http://earthdata.nasa.gov/schema/eos" xmlns:serf="http://gcmd.gsfc.nasa.gov/xml/serf" xmlns:cw="http://www.ngdc.noaa.gov/metadata/published/xsd/crosswalk.xsd" xmlns:thredds="http://www.unidata.ucar.edu/namespaces/thredds/InvCatalog/v1.0" xmlns:hdf5="http://hdfgroup.org/HDF5/XML/schema/HDF5-File" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:fgdc="http://www.fgdc.gov/metadata/csdgm" version="2.0"><xsl:param name="recordSetPath"></xsl:param><xsl:param name="fileNamePattern"></xsl:param><xsl:output method="text"></xsl:output><xsl:template match="/"><xsl:variable name="xmlFilesSelect" select="concat($recordSetPath, '?select=',$fileNamePattern)"></xsl:variable><xsl:text>{"records": [</xsl:text><xsl:for-each select="collection(iri-to-uri($xmlFilesSelect))"><xsl:call-template name="writeSpirals"></xsl:call-template></xsl:for-each><xsl:text>]}</xsl:text></xsl:template><xsl:template name="writeSpirals"><xsl:if test="position()!=1"><xsl:text>,</xsl:text></xsl:if><xsl:text>{"spirals": [</xsl:text><xsl:text>
{</xsl:text><xsl:text>"title":"UMM-Common Required",</xsl:text><xsl:text>"code":"UMM-Common_Required",</xsl:text><xsl:text>"description":"The NASA Unified Metadata Model/Mapping (UMM) includes a profile for elements that are common to all of the UMM Profiles, the UMM-Common Profile. These are the elements required by that profile.",</xsl:text><xsl:text>"maximum":"23",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:RevisionDate | /*/echo:DataGranule/echo:ProductionDateTime)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:DeleteTime)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:InsertTime)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:LastUpdate )) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:ShortName | /*/echo:LongName | /*/echo:DataSetId)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Description)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/ArchiveCenter | /*/Contacts/Contact[contains(Role,'TECHNICAL CONTACT')])) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:ArchiveCenter | /*/Contacts/Contact[contains(Role,'Data Manager')] | /*/Contacts/Contact[contains(Role,'DATA CENTER CONTACT')] | /*/Contacts/Contact[contains(Role,'Archive')] | /*/Contacts/Contact[contains(Role,'Distributor')] | /*/Contacts/Contact[contains(Role,'GHRC USER SERVICES')] | /*/Contacts/Contact[contains(Role,'User Services')])) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:ProcessingLevelId)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Spatial/echo:HorizontalSpatialDomain//* | /*/echo:VerticalSpatialDomain//* | /*/echo:Spatial[SpatialCoverageType='Orbit'] | /*/echo:Spatial[GranuleSpatialRepresentation='ORBIT'] | /*/echo:OrbitCalculatedSpatialDomains/echo:OrbitCalculatedSpatialDomain//*)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/Temporal//*)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL | /*/echo:OnlineResources/echo:OnlineResource/echo:URL)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL | //OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:AssociatedBrowseImages/echo:ProviderBrowseId)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform//*)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(//echo:Platforms/echo:Platform/echo:ShortName | //echo:Platforms/echo:Platform/echo:LongName)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:ShortName)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName | /*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:LongName)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'existTotal'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts" as="xs:integer+"><xsl:sequence select="count(/*/echo:RevisionDate) + count(/*/echo:DataGranule/echo:ProductionDateTime)"></xsl:sequence><xsl:sequence select="count(/*/echo:DeleteTime)"></xsl:sequence><xsl:sequence select="count(/*/echo:InsertTime)"></xsl:sequence><xsl:sequence select="count(/*/echo:LastUpdate )"></xsl:sequence><xsl:sequence select="count(/*/echo:ShortName | /*/echo:LongName) + count(/*/echo:DataSetId)"></xsl:sequence><xsl:sequence select="count(/*/echo:Description)"></xsl:sequence><xsl:sequence select="count(/*/ArchiveCenter) + count(/*/Contacts/Contact[contains(Role,'TECHNICAL CONTACT')])"></xsl:sequence><xsl:sequence select="count(/*/echo:ArchiveCenter) + count(/*/Contacts/Contact[contains(Role,'Data Manager')]) + count(/*/Contacts/Contact[contains(Role,'DATA CENTER CONTACT')]) + count(/*/Contacts/Contact[contains(Role,'Archive')]) + count(/*/Contacts/Contact[contains(Role,'Distributor')]) + count(/*/Contacts/Contact[contains(Role,'GHRC USER SERVICES')]) + count(/*/Contacts/Contact[contains(Role,'User Services')])"></xsl:sequence><xsl:sequence select="count(/*/echo:ProcessingLevelId)"></xsl:sequence><xsl:sequence select="count(/*/echo:Spatial/echo:HorizontalSpatialDomain//*) + count(/*/echo:VerticalSpatialDomain//*) + count(/*/echo:Spatial[SpatialCoverageType='Orbit'] | /*/echo:Spatial[GranuleSpatialRepresentation='ORBIT']) + count(/*/echo:OrbitCalculatedSpatialDomains/echo:OrbitCalculatedSpatialDomain//*)"></xsl:sequence><xsl:sequence select="count(/*/Temporal//*)"></xsl:sequence><xsl:sequence select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName) + count(/*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:sequence><xsl:sequence select="count(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL) + count(/*/echo:OnlineResources/echo:OnlineResource/echo:URL)"></xsl:sequence><xsl:sequence select="count(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL) + count(//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])"></xsl:sequence><xsl:sequence select="count(/*/echo:AssociatedBrowseImages/echo:ProviderBrowseId)"></xsl:sequence><xsl:sequence select="count(/*/echo:Platforms/echo:Platform//*)"></xsl:sequence><xsl:sequence select="count(//echo:Platforms/echo:Platform/echo:ShortName) + count(//echo:Platforms/echo:Platform/echo:LongName)"></xsl:sequence><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:ShortName)"></xsl:sequence><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument)"></xsl:sequence><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName) + count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:LongName)"></xsl:sequence><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'countTotal'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"items" : [
</xsl:text><xsl:text>{
</xsl:text><xsl:text>"name":"Metadata Modified Date",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e4437" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:RevisionDate | /*/echo:DataGranule/echo:ProductionDateTime)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e4437)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e4437" as="xs:integer+"><xsl:sequence select="count(/*/echo:RevisionDate | /*/echo:DataGranule/echo:ProductionDateTime)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e4437)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:RevisionDate",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:RevisionDate)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:RevisionDate)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:DataGranule/echo:ProductionDateTime",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:DataGranule/echo:ProductionDateTime)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:DataGranule/echo:ProductionDateTime)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Date on which the metadata record (not the resource) was created or updated within the catalogue."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Future Metadata Review Date",</xsl:text><xsl:text>"exists":"-1",</xsl:text><xsl:text>"count":"-1",</xsl:text><xsl:text>"description":"Anticipated date of a future metadata review."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Metadata Deletion Date",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e11741" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:DeleteTime)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e11741)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e11741" as="xs:integer+"><xsl:sequence select="count(/*/echo:DeleteTime)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e11741)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:DeleteTime",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:DeleteTime)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:DeleteTime)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Date of metadata deletion."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Creation Date",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e2190" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:InsertTime)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e2190)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e2190" as="xs:integer+"><xsl:sequence select="count(/*/echo:InsertTime)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e2190)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:InsertTime",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:InsertTime)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:InsertTime)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Date of creation of the cited resource"</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Revision Date",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e2165" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:LastUpdate )) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e2165)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e2165" as="xs:integer+"><xsl:sequence select="count(/*/echo:LastUpdate )"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e2165)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:LastUpdate ",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:LastUpdate )) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:LastUpdate )"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Date of revision of the cited resource"</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Title",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e314" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:ShortName | /*/echo:LongName | /*/echo:DataSetId)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e314)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e314" as="xs:integer+"><xsl:sequence select="count(/*/echo:ShortName | /*/echo:LongName | /*/echo:DataSetId)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e314)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:ShortName | /*/echo:LongName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:ShortName | /*/echo:LongName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:ShortName | /*/echo:LongName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:DataSetId",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:DataSetId)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:DataSetId)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"A short description of the resource. The title should be descriptive enough so that when a user is presented with a list of titles the general content of the data set can be determined."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Abstract",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e573" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Description)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e573)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e573" as="xs:integer+"><xsl:sequence select="count(/*/echo:Description)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e573)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Description",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Description)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Description)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"note":"This concept is called Desciption in Catalog Services for the Web.",</xsl:text><xsl:text>"description":"A paragraph describing the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Contact",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e1055" as="xs:integer+"><xsl:sequence select="if(exists(/*/ArchiveCenter | /*/Contacts/Contact[contains(Role,'TECHNICAL CONTACT')])) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e1055)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e1055" as="xs:integer+"><xsl:sequence select="count(/*/ArchiveCenter | /*/Contacts/Contact[contains(Role,'TECHNICAL CONTACT')])"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e1055)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/ArchiveCenter",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/ArchiveCenter)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/ArchiveCenter)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Contacts/Contact[contains(Role,'TECHNICAL CONTACT')]",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Contacts/Contact[contains(Role,'TECHNICAL CONTACT')])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Contacts/Contact[contains(Role,'TECHNICAL CONTACT')])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The organization or person responsible for answering questions about the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Distribution Contact",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e5416" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:ArchiveCenter | /*/Contacts/Contact[contains(Role,'Data Manager')] | /*/Contacts/Contact[contains(Role,'DATA CENTER CONTACT')] | /*/Contacts/Contact[contains(Role,'Archive')] | /*/Contacts/Contact[contains(Role,'Distributor')] | /*/Contacts/Contact[contains(Role,'GHRC USER SERVICES')] | /*/Contacts/Contact[contains(Role,'User Services')])) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e5416)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e5416" as="xs:integer+"><xsl:sequence select="count(/*/echo:ArchiveCenter | /*/Contacts/Contact[contains(Role,'Data Manager')] | /*/Contacts/Contact[contains(Role,'DATA CENTER CONTACT')] | /*/Contacts/Contact[contains(Role,'Archive')] | /*/Contacts/Contact[contains(Role,'Distributor')] | /*/Contacts/Contact[contains(Role,'GHRC USER SERVICES')] | /*/Contacts/Contact[contains(Role,'User Services')])"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e5416)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:ArchiveCenter",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:ArchiveCenter)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:ArchiveCenter)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Contacts/Contact[contains(Role,'Data Manager')]",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Contacts/Contact[contains(Role,'Data Manager')])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Contacts/Contact[contains(Role,'Data Manager')])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Contacts/Contact[contains(Role,'DATA CENTER CONTACT')]",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Contacts/Contact[contains(Role,'DATA CENTER CONTACT')])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Contacts/Contact[contains(Role,'DATA CENTER CONTACT')])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Contacts/Contact[contains(Role,'Archive')]",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Contacts/Contact[contains(Role,'Archive')])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Contacts/Contact[contains(Role,'Archive')])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Contacts/Contact[contains(Role,'Distributor')]",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Contacts/Contact[contains(Role,'Distributor')])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Contacts/Contact[contains(Role,'Distributor')])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Contacts/Contact[contains(Role,'GHRC USER SERVICES')]",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Contacts/Contact[contains(Role,'GHRC USER SERVICES')])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Contacts/Contact[contains(Role,'GHRC USER SERVICES')])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Contacts/Contact[contains(Role,'User Services')]",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Contacts/Contact[contains(Role,'User Services')])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Contacts/Contact[contains(Role,'User Services')])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Contact information for the organization or individual that distributes the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Processing Level",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e9929" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:ProcessingLevelId)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e9929)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e9929" as="xs:integer+"><xsl:sequence select="count(/*/echo:ProcessingLevelId)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e9929)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:ProcessingLevelId",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:ProcessingLevelId)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:ProcessingLevelId)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"A code that indicates the extent of processing done in the creation of a dataset."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Theme Keyword",</xsl:text><xsl:text>"exists":"-1",</xsl:text><xsl:text>"count":"-1",</xsl:text><xsl:text>"note":"The general identification keywords usually have a type of theme and are refered to as theme keywords. Other types and vocabularies are used for other information. Service Entry Resource Format (SERF) requires a Science and a Service GCMD Keyword. This concept is called Subject in the CSW Specification. ",</xsl:text><xsl:text>"description":"A word or phrase that describes some aspect of a resource. Can be one of several types."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Spatial Extent",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e7908" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Spatial/echo:HorizontalSpatialDomain//* | /*/echo:VerticalSpatialDomain//* | /*/echo:Spatial[SpatialCoverageType='Orbit'] | /*/echo:Spatial[GranuleSpatialRepresentation='ORBIT'] | /*/echo:OrbitCalculatedSpatialDomains/echo:OrbitCalculatedSpatialDomain//*)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e7908)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e7908" as="xs:integer+"><xsl:sequence select="count(/*/echo:Spatial/echo:HorizontalSpatialDomain//* | /*/echo:VerticalSpatialDomain//* | /*/echo:Spatial[SpatialCoverageType='Orbit'] | /*/echo:Spatial[GranuleSpatialRepresentation='ORBIT'] | /*/echo:OrbitCalculatedSpatialDomains/echo:OrbitCalculatedSpatialDomain//*)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e7908)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Spatial/echo:HorizontalSpatialDomain//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Spatial/echo:HorizontalSpatialDomain//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Spatial/echo:HorizontalSpatialDomain//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:VerticalSpatialDomain//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:VerticalSpatialDomain//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:VerticalSpatialDomain//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Spatial[SpatialCoverageType='Orbit'] | /*/echo:Spatial[GranuleSpatialRepresentation='ORBIT']",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Spatial[SpatialCoverageType='Orbit'] | /*/echo:Spatial[GranuleSpatialRepresentation='ORBIT'])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Spatial[SpatialCoverageType='Orbit'] | /*/echo:Spatial[GranuleSpatialRepresentation='ORBIT'])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:OrbitCalculatedSpatialDomains/echo:OrbitCalculatedSpatialDomain//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:OrbitCalculatedSpatialDomains/echo:OrbitCalculatedSpatialDomain//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:OrbitCalculatedSpatialDomains/echo:OrbitCalculatedSpatialDomain//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The spatial extent of the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Temporal Extent",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e6497" as="xs:integer+"><xsl:sequence select="if(exists(/*/Temporal//*)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e6497)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e6497" as="xs:integer+"><xsl:sequence select="count(/*/Temporal//*)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e6497)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/Temporal//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/Temporal//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/Temporal//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The temporal extent of the resource"</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Project Name",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e9872" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e9872)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e9872" as="xs:integer+"><xsl:sequence select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e9872)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Campaigns/echo:Campaign/echo:ShortName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Campaigns/echo:Campaign/echo:LongName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The name of the project that the resource was associated with."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource on-line Link",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e6629" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL | /*/echo:OnlineResources/echo:OnlineResource/echo:URL)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e6629)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e6629" as="xs:integer+"><xsl:sequence select="count(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL | /*/echo:OnlineResources/echo:OnlineResource/echo:URL)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e6629)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:OnlineResources/echo:OnlineResource/echo:URL",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:OnlineResources/echo:OnlineResource/echo:URL)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:OnlineResources/echo:OnlineResource/echo:URL)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Online link referencing additional information about the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Browse URL",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e6205" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL | //OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e6205)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e6205" as="xs:integer+"><xsl:sequence select="count(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL | //OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e6205)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail']",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Location of the browse file on the Web."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Browse File Name",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e6171" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:AssociatedBrowseImages/echo:ProviderBrowseId)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e6171)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e6171" as="xs:integer+"><xsl:sequence select="count(/*/echo:AssociatedBrowseImages/echo:ProviderBrowseId)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e6171)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:AssociatedBrowseImages/echo:ProviderBrowseId",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:AssociatedBrowseImages/echo:ProviderBrowseId)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:AssociatedBrowseImages/echo:ProviderBrowseId)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Name of the file holding the browse graphic."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Platform",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e10108" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform//*)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e10108)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e10108" as="xs:integer+"><xsl:sequence select="count(/*/echo:Platforms/echo:Platform//*)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e10108)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Platforms/echo:Platform//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Platforms/echo:Platform//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Platforms/echo:Platform//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The platform used to collect the observations."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Platform Keyword",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e10265" as="xs:integer+"><xsl:sequence select="if(exists(//echo:Platforms/echo:Platform/echo:ShortName | //echo:Platforms/echo:Platform/echo:LongName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e10265)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e10265" as="xs:integer+"><xsl:sequence select="count(//echo:Platforms/echo:Platform/echo:ShortName | //echo:Platforms/echo:Platform/echo:LongName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e10265)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"//echo:Platforms/echo:Platform/echo:ShortName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(//echo:Platforms/echo:Platform/echo:ShortName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(//echo:Platforms/echo:Platform/echo:ShortName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"//echo:Platforms/echo:Platform/echo:LongName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(//echo:Platforms/echo:Platform/echo:LongName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(//echo:Platforms/echo:Platform/echo:LongName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Keywords that describe the platform used to collect the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Platform Short Name",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e10348" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:ShortName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e10348)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e10348" as="xs:integer+"><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:ShortName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e10348)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Platforms/echo:Platform/echo:ShortName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Platforms/echo:Platform/echo:ShortName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Platforms/echo:Platform/echo:ShortName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The platform used to collect the observations."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Instrument",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e10145" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e10145)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e10145" as="xs:integer+"><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e10145)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Information about the instrument used to make the observations."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Instrument Keyword",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e10190" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName | /*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:LongName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e10190)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e10190" as="xs:integer+"><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName | /*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:LongName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e10190)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:LongName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:LongName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:LongName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Keywords that describe the instrument used to collect the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Instrument Short Name",</xsl:text><xsl:variable name="UMM-Common_Required.itemExists.d1e10651" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemExists.d1e10651)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Required.itemCounts.d1e10651" as="xs:integer+"><xsl:sequence select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Required.itemCounts.d1e10651)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Platforms/echo:Platform/echo:Instruments/echo:Instrument/echo:ShortName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Short name (abbreviation) for the Instrument used to collect the observations."</xsl:text><xsl:text>}</xsl:text>
<xsl:text>]
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"title":"UMM-Common Optional",</xsl:text><xsl:text>"code":"UMM-Common_Optional",</xsl:text><xsl:text>"description":"The NASA Unified Metadata Model/Mapping (UMM) includes a profile for elements that are common to all of the UMM Profiles, the UMM-Common Profile. These are the optional elements included in that profile.",</xsl:text><xsl:text>"maximum":"15",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:InsertTime | /*/echo:LastUpdate)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/SuggestedUsage)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:CitationForExternalPublication)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/echo:Collection/Temporal/PrecisionOfSeconds | /echo:Granule/MeasuredParameters/MeasuredParameter/QAStats//* | /echo:Granule/MeasuredParameters/MeasuredParameter/QAFlags//*)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:RestrictionFlag | /*/echo:RestrictionComment)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:RestrictionFlag | /*/echo:RestrictionComment | /*/echo:Visible)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/TwoDCoordinateSystem//*)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL | /*/echo:OnlineResources/echo:OnlineResource/echo:URL)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL | //OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:DataFormat | /*/CSDTDescriptions/CSDTDescription/Implementation | /*/AdditionalAttributes/AdditionalAttribute[Name='FileFormat']/Value)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:sequence><xsl:sequence select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'existTotal'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts" as="xs:integer+"><xsl:sequence select="count(/*/echo:InsertTime) + count(/*/echo:LastUpdate)"></xsl:sequence><xsl:sequence select="count(/*/SuggestedUsage)"></xsl:sequence><xsl:sequence select="count(/*/echo:CitationForExternalPublication)"></xsl:sequence><xsl:sequence select="count(/echo:Collection/Temporal/PrecisionOfSeconds) + count(/echo:Granule/MeasuredParameters/MeasuredParameter/QAStats//*) + count(/echo:Granule/MeasuredParameters/MeasuredParameter/QAFlags//*)"></xsl:sequence><xsl:sequence select="count(/*/echo:RestrictionFlag) + count(/*/echo:RestrictionComment)"></xsl:sequence><xsl:sequence select="count(/*/echo:RestrictionFlag) + count(/*/echo:RestrictionComment) + count(/*/echo:Visible)"></xsl:sequence><xsl:sequence select="count(/*/TwoDCoordinateSystem//*)"></xsl:sequence><xsl:sequence select="count(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL) + count(/*/echo:OnlineResources/echo:OnlineResource/echo:URL)"></xsl:sequence><xsl:sequence select="count(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL) + count(//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])"></xsl:sequence><xsl:sequence select="count(/*/echo:DataFormat) + count(/*/CSDTDescriptions/CSDTDescription/Implementation) + count(/*/AdditionalAttributes/AdditionalAttribute[Name='FileFormat']/Value)"></xsl:sequence><xsl:sequence select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName) + count(/*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:sequence><xsl:sequence select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName) + count(/*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'countTotal'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"items" : [
</xsl:text><xsl:text>{
</xsl:text><xsl:text>"name":"Metadata Language",</xsl:text><xsl:text>"exists":"-1",</xsl:text><xsl:text>"count":"-1",</xsl:text><xsl:text>"description":"Language of the metadata"</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Language",</xsl:text><xsl:text>"exists":"-1",</xsl:text><xsl:text>"count":"-1",</xsl:text><xsl:text>"description":"The language of the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Creation/Revision Date",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e447" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:InsertTime | /*/echo:LastUpdate)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e447)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e447" as="xs:integer+"><xsl:sequence select="count(/*/echo:InsertTime | /*/echo:LastUpdate)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e447)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:InsertTime",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:InsertTime)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:InsertTime)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:LastUpdate",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:LastUpdate)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:LastUpdate)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The date the resource was created"</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Purpose",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e3010" as="xs:integer+"><xsl:sequence select="if(exists(/*/SuggestedUsage)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e3010)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e3010" as="xs:integer+"><xsl:sequence select="count(/*/SuggestedUsage)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e3010)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/SuggestedUsage",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/SuggestedUsage)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/SuggestedUsage)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"A paragraph describing the original purpose for collecting the dataset."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Citation",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e2698" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:CitationForExternalPublication)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e2698)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e2698" as="xs:integer+"><xsl:sequence select="count(/*/echo:CitationForExternalPublication)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e2698)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:CitationForExternalPublication",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:CitationForExternalPublication)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:CitationForExternalPublication)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Citation for the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Quality Statement",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e6879" as="xs:integer+"><xsl:sequence select="if(exists(/echo:Collection/Temporal/PrecisionOfSeconds | /echo:Granule/MeasuredParameters/MeasuredParameter/QAStats//* | /echo:Granule/MeasuredParameters/MeasuredParameter/QAFlags//*)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e6879)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e6879" as="xs:integer+"><xsl:sequence select="count(/echo:Collection/Temporal/PrecisionOfSeconds | /echo:Granule/MeasuredParameters/MeasuredParameter/QAStats//* | /echo:Granule/MeasuredParameters/MeasuredParameter/QAFlags//*)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e6879)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/echo:Collection/Temporal/PrecisionOfSeconds",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/echo:Collection/Temporal/PrecisionOfSeconds)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/echo:Collection/Temporal/PrecisionOfSeconds)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/echo:Granule/MeasuredParameters/MeasuredParameter/QAStats//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/echo:Granule/MeasuredParameters/MeasuredParameter/QAStats//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/echo:Granule/MeasuredParameters/MeasuredParameter/QAStats//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/echo:Granule/MeasuredParameters/MeasuredParameter/QAFlags//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/echo:Granule/MeasuredParameters/MeasuredParameter/QAFlags//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/echo:Granule/MeasuredParameters/MeasuredParameter/QAFlags//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Information about the quality of the data or any quality assurance procedures followed in producing the data."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Use Constraints",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e5086" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:RestrictionFlag | /*/echo:RestrictionComment)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e5086)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e5086" as="xs:integer+"><xsl:sequence select="count(/*/echo:RestrictionFlag | /*/echo:RestrictionComment)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e5086)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:RestrictionFlag",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:RestrictionFlag)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:RestrictionFlag)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:RestrictionComment",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:RestrictionComment)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:RestrictionComment)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Information about how the data may or may not be used after access is granted to assure the protection of privacy or intellectual property. This includes any special restrictions, legal prerequisites, terms and conditions, and/or limitations on using the data set. Data providers may request acknowledgement of the data from users and claim no responsibility for quality and completeness of data."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Access Constraints",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e5017" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:RestrictionFlag | /*/echo:RestrictionComment | /*/echo:Visible)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e5017)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e5017" as="xs:integer+"><xsl:sequence select="count(/*/echo:RestrictionFlag | /*/echo:RestrictionComment | /*/echo:Visible)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e5017)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:RestrictionFlag",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:RestrictionFlag)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:RestrictionFlag)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:RestrictionComment",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:RestrictionComment)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:RestrictionComment)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Visible",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Visible)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Visible)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Information about any constraints for accessing the data set. This includes any special restrictions, legal prerequisites, limitations and/or warnings on obtaining the data set. Some words that may be used in this field include: Public, In-house, Limited, Additional detailed instructions on how to access the data can be entered in this field."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Topic Category",</xsl:text><xsl:text>"exists":"-1",</xsl:text><xsl:text>"count":"-1",</xsl:text><xsl:text>"description":"High level category enumeration used in ISO"</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"TwoDCoordinateSystem",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e7866" as="xs:integer+"><xsl:sequence select="if(exists(/*/TwoDCoordinateSystem//*)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e7866)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e7866" as="xs:integer+"><xsl:sequence select="count(/*/TwoDCoordinateSystem//*)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e7866)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/TwoDCoordinateSystem//*",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/TwoDCoordinateSystem//*)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/TwoDCoordinateSystem//*)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Bounding extent defined in two dimensions with min and max values."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource on-line Link",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e6629" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL | /*/echo:OnlineResources/echo:OnlineResource/echo:URL)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e6629)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e6629" as="xs:integer+"><xsl:sequence select="count(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL | /*/echo:OnlineResources/echo:OnlineResource/echo:URL)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e6629)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:OnlineAccessURLs/echo:OnlineAccessURL/echo:URL)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:OnlineResources/echo:OnlineResource/echo:URL",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:OnlineResources/echo:OnlineResource/echo:URL)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:OnlineResources/echo:OnlineResource/echo:URL)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Online link referencing additional information about the resource."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Browse URL",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e6205" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL | //OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e6205)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e6205" as="xs:integer+"><xsl:sequence select="count(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL | //OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e6205)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:AssociatedBrowseImageUrls/echo:ProviderBrowseUrl/echo:URL)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail']",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(//OnlineResources/OnlineResource[Type='Browse'] | //OnlineResources/OnlineResource[Type='BROWSE'] | //OnlineResources/OnlineResource[Type='Thumbnail'])"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Location of the browse file on the Web."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Resource Format",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e4713" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:DataFormat | /*/CSDTDescriptions/CSDTDescription/Implementation | /*/AdditionalAttributes/AdditionalAttribute[Name='FileFormat']/Value)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e4713)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e4713" as="xs:integer+"><xsl:sequence select="count(/*/echo:DataFormat | /*/CSDTDescriptions/CSDTDescription/Implementation | /*/AdditionalAttributes/AdditionalAttribute[Name='FileFormat']/Value)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e4713)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:DataFormat",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:DataFormat)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:DataFormat)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/CSDTDescriptions/CSDTDescription/Implementation",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/CSDTDescriptions/CSDTDescription/Implementation)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/CSDTDescriptions/CSDTDescription/Implementation)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/AdditionalAttributes/AdditionalAttribute[Name='FileFormat']/Value",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/AdditionalAttributes/AdditionalAttribute[Name='FileFormat']/Value)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/AdditionalAttributes/AdditionalAttribute[Name='FileFormat']/Value)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The physical or digital manifestation of the resource"</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Project Name",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e9872" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e9872)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e9872" as="xs:integer+"><xsl:sequence select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e9872)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Campaigns/echo:Campaign/echo:ShortName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Campaigns/echo:Campaign/echo:LongName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"The name of the project that the resource was associated with."</xsl:text><xsl:text>}</xsl:text>,
<xsl:text>{
</xsl:text><xsl:text>"name":"Project Keyword",</xsl:text><xsl:variable name="UMM-Common_Optional.itemExists.d1e11010" as="xs:integer+"><xsl:sequence select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemExists.d1e11010)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="UMM-Common_Optional.itemCounts.d1e11010" as="xs:integer+"><xsl:sequence select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName | /*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($UMM-Common_Optional.itemCounts.d1e11010)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>
"paths" : [
</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Campaigns/echo:Campaign/echo:ShortName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:ShortName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Campaigns/echo:Campaign/echo:ShortName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>,</xsl:text><xsl:text>
{</xsl:text><xsl:text>"path":"/*/echo:Campaigns/echo:Campaign/echo:LongName",</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'exists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="if(exists(/*/echo:Campaigns/echo:Campaign/echo:LongName)) then 1 else 0"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'count'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="count(/*/echo:Campaigns/echo:Campaign/echo:LongName)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text><xsl:text>],
</xsl:text><xsl:text>"description":"Keywords that describe the Project used to collect the resource."</xsl:text><xsl:text>}</xsl:text>
<xsl:text>]
</xsl:text><xsl:text>}</xsl:text><xsl:text>],</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'Record'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="document-uri(.)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="'Date'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="current-date()"></xsl:value-of><xsl:text>",
</xsl:text><xsl:text>"rubricType":"UMM-Common",</xsl:text><xsl:text>"rubricVersion":"0.1",</xsl:text><xsl:text>"rubricMax":"38",</xsl:text><xsl:variable name="rubricExists" as="xs:integer+"><xsl:sequence select="$UMM-Common_Required.itemExists"></xsl:sequence><xsl:sequence select="$UMM-Common_Optional.itemExists"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'rubricExists'"></xsl:value-of><xsl:text>":"</xsl:text><xsl:value-of select="sum($rubricExists)"></xsl:value-of><xsl:text>",
</xsl:text><xsl:variable name="rubricCounts" as="xs:integer+"><xsl:sequence select="$UMM-Common_Required.itemCounts"></xsl:sequence><xsl:sequence select="$UMM-Common_Optional.itemCounts"></xsl:sequence></xsl:variable><xsl:text>"</xsl:text><xsl:value-of select="'rubricCounts'"></xsl:value-of><xsl:text>"</xsl:text><xsl:text>:</xsl:text><xsl:text>"</xsl:text><xsl:value-of select="sum($rubricCounts)"></xsl:value-of><xsl:text>"
</xsl:text><xsl:text>}</xsl:text></xsl:template></xsl:stylesheet>